<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>comment</key>
	<string></string>
	<key>fileTypes</key>
	<array>
		<string>lsp</string>
	</array>
	<key>name</key>
	<string>AutoLISP</string>
	<key>repository</key>
	<dict>
		<key>call</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])ll-(?:features)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.variable.require.call.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])ll-(?:featurep|provide|require)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.require.call.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])ll-(?:nand|nor|xor|functionp|typep|anyp)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.lang.call.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])ll-(?:true|false)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.constant.boolean.call.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])ll-(?:booleanp)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.boolean.call.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])ll-(?:void)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.constant.void.call.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])ll-(?:voidp)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.void.call.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])ll-(?:symbolp|symbol-value|symbol-name)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.symbols.call.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])ll-(?:substring|list-&gt;string|string-(?:&gt;list|elt|position)|string-(?:left-|right-)?trim)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.strings.call.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])ll-(?:integerp|realp|natnump|plusp|oddp|evenp|clamp|lerp|mod|quot|frac|signum|copysign|lcm|truncate|floor|ceiling|round[*]?|log10|log2|cbrt|tan|asin|acos|hypot|rtd|dtr|sinh|cosh|tanh|asinh|acosh|atanh)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.numbers.call.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])ll-(?:e|ln10|ln2|log10e|log2e|pi/2|pi/4|pi/180|180/pi|1/pi|2pi|sqrt2|sqrt1/2)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.constant.numbers.call.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])ll-(?:cot|sec|csc|acot|asec|acsc|versin|vercos|coversin|covercos|haversin|havercos|hacoversin|hacovercos|exsec|excsc|coth|sech|csch|asech|acsch)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.raretrig.call.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])ll-(?:rand|srand|random|random-seed)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.random.call.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])ll-(?:boole-(?:1|2|and|andc1|andc2|c1|c2|clr|eqv|ior|nand|nor|orc1|orc2|set|xor))(?=$|[\s()])</string>
					<key>name</key>
					<string>support.constant.bitwise.call.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])ll-(?:most-(?:positive|negative)-fixnum|float-(?:negative-)?epsilon|(?:negative-)?inf|nan)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.constant.numlims.call.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])ll-(?:infp|nanp)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.numlims.call.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])ll-(?:consp|endp|make-list|first|second|third|fourth|fifth|sixth|seventh|eighth|ninth|tenth|rest|nthcdr|firstn|butlast|butlastn|last-cons|lastn|sublist|subseq|split(?:-if(?:-not)?|-at(?:-first|-last)?|-all)?|partition(?:-all)?|separate|list-length|revappend|copy-(?:list|tree)|count(?:-if(?:-not)?)?|maplist|maptree|some|every|foldr|foldl|reduce(?:-from-end|-with-init)?|member-if(?:-not)?|position(?:-if(?:-not)?)?|inlistp|mismatch|subst(?:-if(?:-not)?|-nth|-first|-last)|substree|sublis|flatten|insert|remove(?:-if(?:-not)?|-nth|-first|-last)?|remove(?:-adjacent)?-duplicates|tailp|ldiff)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.lists.call.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])ll-(?:subsetp|adjoin|union|intersection|set-difference|set-exclusive-or)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.lsets.call.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])ll-(?:vlaobjectp|variantp|safearrayp)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.activex.call.lisp</string>
				</dict>
			</array>
		</dict>
		<key>comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>;\|</string>
					<key>end</key>
					<string>\|;</string>
					<key>name</key>
					<string>comment.block.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>;.*$</string>
					<key>name</key>
					<string>comment.line.semicolon.lisp</string>
				</dict>
			</array>
		</dict>
		<key>control</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?&lt;=^|['\s()])(?i:cond|if|and|or|not|progn|exit|quit|repeat|while|foreach|setq)(?=$|[\s()])</string>
					<key>name</key>
					<string>keyword.control.lisp</string>
				</dict>
			</array>
		</dict>
		<key>expressions</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#strings</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#numbers</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#control</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#functions</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#symbols</string>
				</dict>
			</array>
		</dict>
		<key>functions</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.function.lisp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.lisp</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.begin.lisp</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.lisp</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.end.lisp</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?i)(defun[q]?)\s+([^'\s()]+)\s*(\()([^'()]*)(\))</string>
					<key>name</key>
					<string>meta.function.lisp</string>
				</dict>
			</array>
		</dict>
		<key>numbers</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?&lt;=^|['\s()])[+-]?\d+\.?\d*((e|E)(\+|-)?\d+)?(?=$|[\s()])</string>
					<key>name</key>
					<string>constant.numeric.lisp</string>
				</dict>
			</array>
		</dict>
		<key>parens</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.group.begin.lisp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.group.end.lisp</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.group.lisp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#expressions</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#parens</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>strings</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>"</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.lisp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>"</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.lisp</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.lisp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\\(?:\d{1,3}|.)</string>
							<key>name</key>
							<string>constant.character.escape.lisp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>symbols</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#vanilla</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#vl</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#vlr</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#vlax</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#vla</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#vle</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#call</string>
				</dict>
			</array>
		</dict>
		<key>vanilla</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])\*(?:last-value|error|push-error-using-(?:command|stack)|pop-error-mode)\*(?=$|[\s()])</string>
					<key>name</key>
					<string>variable.language.vanilla.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])(?:nil|t)(?=$|[\s()])</string>
					<key>name</key>
					<string>constant.language.vanilla.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;=^|['\s()])(?i:eval|quote|setq|lambda|function|apply|defun|defun-q|cond|if|and|or|not|progn|exit|quit|repeat|while|foreach|equal|eq|=|/=|&lt;|&gt;|&lt;=|&gt;=|type|trace|untrace)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.base.vanilla.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])(?:set|boundp|atoms-family)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.symbols.vanilla.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])(?:strlen|substr|strcat|ascii|chr|strcase|wcmatch|acad_strlsort)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.strings.vanilla.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;=^|['\s()])(?i:numberp|zerop|minusp|float|fix|itoa|atoi|atof|\+|-|\*|/|1\+|1-|abs|min|max|rem|gcd|expt|exp|log|sqrt|sin|cos|atan)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.numbers.vanilla.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])(?:pi)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.constant.numbers.vanilla.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;=^|['\s()])(?i:~|lsh|logand|logior|boole)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.bitwise.vanilla.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])(?:atom|null|listp|cons|list|c[ad]{1,4}r|last|nth|length|reverse|append|mapcar|member|subst|assoc)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.lists.vanilla.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])(?:open|close|(?:read|write)-(?:char|line)|findfile|findtrustedfile|fnsplitl|prin[tc1]|read|load)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.io.vanilla.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])(?:prompt|terpri|textpage|textscr|graphscr|redraw|grtext|grdraw|grvecs|vports|menucmd|menugroup)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.display.vanilla.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])(?:[gs]etvar|acad-(?:push|pop)-dbmod|alert|acad_(?:helpdlg|colordlg|truecolordlg|truecolorcli)|getfiled)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.acad.vanilla.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])(?:initget|get(?:kword|string|int|real|dist|angle|orient|point|corner)|entsel|nentsel|nentselp)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.input.vanilla.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])(?:entget|entmod|entmake|entmakex|entlast|entnext|entupd|entdel|handent)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.entity.vanilla.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])(?:ssget|ss[gs]etfirst|sslength|ssmemb|ssadd|ssdel|ssname[x]?)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.selectionset.vanilla.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])(?:dumpallproperties|ispropertyreadonly|[gs]etpropertyvalue)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.acadmac.vanilla.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])(?:(?:load|unload|new|start|term|done)_dialog|(?:add|start|end)_list|(?:start|end|slide|fill|vector)_image|(?:[gs]et|action|mode|dimx|dimy|client_data)_tile|get_attr)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.dcl.vanilla.lisp</string>
				</dict>
			</array>
		</dict>
		<key>vl</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])vl-load-com(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.misc.vl.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])vl-symbol(?:p|-value|-name)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.symbols.vl.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])vl-(?:string-(?:elt|(?:left-|right-)?trim|position|search|translate|mismatch|&gt;list)|list-&gt;string)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.strings.vl.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])vl-(?:consp|list\*|list-length|some|every|member-if(?:-not)?|position|remove(?:-if(?:-not)?)?|sort(?:-i)?)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.lists.vl.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])vl-(?:prin[c1]-to-string|file-(?:directory-p|size|systime|rename|copy|delete)|filename-(?:directory|base|extension|mktemp)|directory-files|mkdir)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.io.vl.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])vl-(?:catch-all-(?:apply|error-p))(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.error.vl.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])vl-(?:arx-import|doc-(?:import|export|ref|set)|exit-with-(?:error|value)|list-loaded-vlx|unload-vlx|vlx-loaded-p|bb-(?:ref|set)|load-all|propogate)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.namespace.vl.lisp</string>
				</dict>
			</array>
		</dict>
		<key>vla</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])vla-(?:Delete|Move|Copy|(?:Rotate|Mirror)(?:3D)?|ScaleEntity|TransformBy|Array(?:Polar|Rectangular)|Update|Highlight|GetBoundingBox|[GS]etXData|GetExtensionDictionary|IntersectWith|Offset)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.method.common.vla.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])vla-(?:get|put)-(?:Layer|Linetype|LinetypeScale|Lineweight|TrueColor|Material|Visible|EntityTransparency|Rotation|Thickness|Coordinate[s]?|Normal|PlotStyleName|Position|Closed|Area)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.property.common.vla.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])vla-get-(?:Application|Document|Handle|(?:Object|Owner)ID(?:32)?|ObjectName|HasExtensionDictionary|HyperLinks|Area)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.property.common.vla.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])ac(?:Min|Max|Norm)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.constant.windowstate.vla.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])vla-(?:Quit|GetAcadState|GetInterfaceObject|Zoom(?:All|Center|Extents|PickWindow|Previous|Scaled|Window)|ListARX|(?:Load|Unload)(?:ARX|DVB)|Eval|RunMacro)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.method.application.vla.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])vla-(?:get|put)-(?:ActiveDocument)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.property.application.vla.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])vla-get-(?:Caption|Documents|HWND(?:32)?|Window(?:State|Left|Top)|Version|StatusID|LocaleID|VBE|MenuGroups|MenuBar)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.property.application.vla.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])ac(?:Model|Paper)Space(?=$|[\s()])</string>
					<key>name</key>
					<string>support.constant.activespace.vla.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])vla-(?:CopyObjects|HandleToObject|ObjectIdToObject(?:32)?)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.method.database.vla.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])vla-(?:get|put)-(?:Elevation(?:Model|Paper)Space)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.property.database.vla.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])vla-get-(?:Blocks|Dictionaries|DimStyles|FileDependencies|Groups|Layers|Layouts|Linetypes|Materials|(?:Model|Paper)Space|PlotConfigurations|Preferences|RegisteredApplications|SectionManager|SummaryInfo|TextStyles|UserCoordinateSystems|Viewports|Views)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.property.database.vla.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])vla-(?:New|Open|Close|Save|SaveAs|Import|Export|WBlock|LoadShapeFile|PurgeAll|Regen|Activate|AuditInfo|(?:Start|End)UndoMark|[GS]etVariable|SendCommand)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.method.document.vla.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])vla-(?:get|put)-(?:Active(?:DimStyle|Layer|Layout|LineType|Material|PViewport|Space|TextStyle|UCS|Viewport)|Limits|MSpace)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.property.document.vla.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])vla-get-(?:Database|Active|Utility|ObjectSnapMode|SelectionSets|ActiveSelectionSet|PickfirstSelectionSet|Plot|WindowTitle|FullName|Path|ReadOnly|Saved)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.property.document.vla.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])vla-(?:TranslateCoordinates|CreateTypedArray|GetObjectIdString|ObjectId32ToObjectIdString|AngleFromXAxis|AngleToReal|AngleToString|DistanceToReal|RealToString|PolarPoint|Prompt|InitializeUserInput|Get(?:Angle|Corner|Distance|Input|Integer|Keyword|Orientation|Point|Real|String|Entity|SubEntity(?:32)?)|IsURL|(?:Get|Put|Is)RemoteFile|SendModelessOperation(?:Start|Ended)|LaunchBrowserDialog)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.method.utility.vla.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])ac(?:ByBlock|ByLayer|Red|Yellow|Green|Cyan|Blue|Magenta|White)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.constant.color.vla.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])acLnWt(?:ByLayer|ByBlock|ByLwDefault|000|005|009|013|015|018|020|025|030|035|040|050|053|060|070|080|090|100|106|120|140|158|200|211)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.constant.lineweight.vla.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])vla-(?:(?:Add|Delete)FitPoint|ElevateOrder|[GS]et(?:Control|Fit)Point|GetWeight|PurgeFitData)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.method.spline.vla.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])vla-(?:get|put)-(?:Closed2|Degree2|EndTangent|FitPoints|FitTolerance|KnotParameterization|Knots|SplineFrame|SplineMethod|StartTangent|Weights)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.property.spline.vla.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])vla-get-(?:Closed|Degree|IsPeriodic|IsPlanar|IsRational|NumberOfControlPoints)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.property.spline.vla.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])ac(?:Chord|SqrtChord|UniformParam|CustomParameterization|Hide|Show|Fit|ControlVertices)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.constant.spline.vla.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])vla-(?:get|put)-(?:BaseRadius|TopRadius|Constrain|TurnHeight|Turns|TurnSlope|Twist|TotalLength)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.property.helix.vla.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])vla-(?:Add|Item)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.method.collection.vla.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])vla-get-Count(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.property.collection.vla.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])vla-(?:Clear|(?:Add|Remove)Items|Select(?:AtPoint|ByPolygon|OnScreen)?|Erase)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.method.selectionset.vla.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])vla-AppendItems(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.method.group.vla.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])vla-(?:AddXRecord|AddObject|GetObject|GetName|Remove|Rename|Replace)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.method.dictionary.vla.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])vla-(?:IndexOf|(?:Create|Update|Remove)Entry)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.method.filedependencies.vla.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])vla-(?:AffectGraphics|Feature|FleName|FileSize|FingerprintGUID|FoundPath|FullFileName|Index|IsModified|ReferenceCount|TimeStamp|VersionGUID)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.property.filedependency.vla.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])vla-(?:Add(?:Point|Line|Poly|Polyline|LightWeightPolyline|Vertex|Section|3DPoly|Spline|MLine|XLine|Ray|Arc|Circle|Ellipse|Text|MText|Solid|Table|Polyface|3DFace|3DMesh|Box|Sphere|(?:Elliptical)?(?:Cone|Cylinder)|ExtrudedSolid(?:AlongPath)?|Torus|Attribute|Dim(?:(?:3Point)?Angular|Aligned|Arc|Diametric|Ordinate|Radial(?:Large)?|Rotated)|FitPoint|Hatch|Leader|LeaderLine(?:Ex)?|MInsertBLock|MLeader|PViewport|Raster|Region|RevolvedSolid|Shape|Tolerance|Trace|Wedge))(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.method.block.vla.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])vla-(?:ClearSubSelection|ClearTableStyleOverrides|CreateContent|Delete(?:Cell)?Content|Delete(?:Columns|Rows)|EnableMergeAll|FormatValue|GenerateLayout)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.table.vla.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])vla-(?:(?:Add|Num)CustomInfo|(?:[GS]et|Remove)CustomBy(?:Index|Key))(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.method.summaryinfo.vla.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])vla-(?:get|put)-(?:Author|Coments|HyperlinkBase|Keywords|LastSavedBy|RevisionNumber|Subject|Title)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.property.summaryinfo.vla.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])vla-(?:Save|SaveAs|Unload|Delete|(?:Add(?:MenuItem|Separator|Submenu|ToolbarButton)|(?:Insert(?:Menu)?In|Remove(?:Menu)?From)MenuBar)|Dock|Float|AttachToolbarToFlyout|[GS]etBitmaps)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.method.menu-toolbar.vla.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])vla-(?:get|put)-(?:FloatingRows|LargeButtons|Left|Top|Check|Enable|EndSubMenuLevel|HelpString|CommandDisplayName)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.property.menu-toolbar.vla.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])vla-get-(?:MenuFileName|Menus|Submenu|Toolbars|Index|Caption|Label|Macro|NameNoMnemonic|OnMenuBar|ShortcutMenu|Parent|DockStatus|Height|Width|Type|TagString|Flyout)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.property.menu-toolbar.vla.lisp</string>
				</dict>
			</array>
		</dict>
		<key>vlax</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()]):vlax-(?:true|false|null)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.constant.activex.language.vlax.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])vlax-vb(?:OK|Cancel|Abort|Retry|Ignore|Yes|No)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.constant.activex.msgbox-result.vlax.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])vlax-vb(?:OKOnly|OKCancel|AbortRetryIgnore|YesNoCancel|YesNo|RetryCancel|Critical|Question|Exclamation|Information|DefaultButton1|DefaultButton2|DefaultButton3|ApplicationModal|SystemModal)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.constant.activex.msgbox-style.vlax.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])vlax-vb(?:Normal|ReadOnly|Hidden|System|Volume|Directory|Archive)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.constant.activex.fileattr.vlax.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])vlax-vb(?:UpperCase|LowerCase|ProperCase|Wide|Narrow|Katakana|Hiragana)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.constant.activex.strconv.vlax.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])vlax-vb(?:Empty|Null|Integer|Long|Single|Double|Currency|Date|String|Object|Error|Boolean|Variant|DataObject|Decimal|Array)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.constant.activex.variant-type.vlax.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])vlax-(?:make-variant|variant-(?:value|type|change-type))(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.activex.variant.vlax.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])vlax-(?:3d-point|tmatrix)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.activex.misc.vlax.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])vlax-(?:make-safearray|safearray-(?:fill|(?:get|put)-element|get-(?:dim|[lu]-bound)|type|value|&gt;list))(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.activex.safearray.vlax.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])vlax-(?:for|map-collection)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.activex.collection.vlax.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])vlax-(?:(?:create|get|get-or-create|release|dump)-object|object-released-p|invoke-method|method-applicable-p|(?:get|put)-property|property-available-p|import-type-library|typeinfo-avilable-p)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.activex.object.vlax.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])vlax-(?:get|put|invoke)(?=$|[\s()])</string>
					<key>name</key>
					<string>invalid.deprecated.activex.object.vlax.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])vlax-(?:get-acad-object|(?:machine-|user-)?product-key|(?:add|remove)-cmd|ldata-(?:get|put|delete|list|test)|vla-object-&gt;ename|ename-&gt;vla-object|erased-p|(?:read|write)-enabled-p|queueexpr)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.activex.acad.vlax.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])vlax-registry-(?:read|write|delete|descendents)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.registry.vlax.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])vlax-curve-(?:get(?:|area|closestpointto(?:projection)?|distatparam|paramatdist|distatpoint|pointatdist|pointatparam|paramatpoint|startparam|endparam|startpoint|endpoint|firstderiv|secondderiv)|is(?:closed|periodic|planar))(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.curve.vlax.lisp</string>
				</dict>
			</array>
		</dict>
		<key>vle</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])vle-extensions-active(?=$|[\s()])</string>
					<key>name</key>
					<string>support.constant.vle.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])until(?=$|[\s()])</string>
					<key>name</key>
					<string>keyword.control.vle.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])vle-symbolp(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.symbols.vle.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])vle-(?:strig-p|string-split)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.strings.vle.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])vle-(?:numberp|integerp|realp|floor|ceiling|round|roundto|tan)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.numbers.vle.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])vle-(?:nth\d|sublist|append|(?:[gs]et-)?(?:cdrassoc|cassoc)|list-(?:split|union|intersect|diff|subtract)|put-nth|remove-(?:all|first|last|nth)|search|find|member|subst-nth)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.lists.vle.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])(?:vle-(?:vlaobjectp|variantp|safearrayp)|vlax-2d-point)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.activex.vle.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])vle-(?:filep|file-&gt;list)(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.io.vle.lisp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])vle-displaypause(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.display.vle.lisp</string>
				</dict>
			</array>
		</dict>
		<key>vlr</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|['\s()])vlr-(?=$|[\s()])</string>
					<key>name</key>
					<string>support.function.vlr.lisp</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.lisp</string>
	<key>uuid</key>
	<string>00D451C9-6B1D-11D9-8DFA-000D93589AF7</string>
</dict>
</plist>